plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	jaxb
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'io.r2dbc:r2dbc-h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation "org.mockito:mockito-all:3.+"
	testImplementation 'junit:junit:4.13'

	jaxb (
			'com.sun.xml.bind:jaxb-core:2.3.0.1',
			'com.sun.xml.bind:jaxb-xjc:2.3.2',
			'com.sun.xml.bind:jaxb-impl:2.3.2'
	)
	implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
	implementation "org.glassfish.jaxb:jaxb-runtime:2.3.2"

}

task generateJavaClasses {
	// output directory
	def jaxbTargetDir = file("/src/main/java/Client")

	// perform actionsx
	doLast {
		jaxbTargetDir.mkdirs()

		ant.taskdef(name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask', classpath: configurations.jaxb.asPath)
		ant.jaxbTargetDir = jaxbTargetDir

		ant.xjc(
				destdir: '${jaxbTargetDir}',
				package: 'com.example',
				schema: 'src/main/resources/wsdl.wsdl',
				language: 'WSDL'
		)
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
